<!DOCTYPE configuration
    PUBLIC "-//mybatis.org//DTD Config 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>



    <!--通过这个配置文件，完成mybatis与数据库的连接  -->
        <!-- 注意此配置文件内的元素的  -->
        <!-- 引入database.properties文件 -->
        <properties resource="conf/jdbc.properties"/>
        <!--配置mybatis的log实现为LOG4J  -->
        <!-- 配置后，后台就会有sql语句的输出 -->
    <settings>
        <!-- 打印查询语句 -->
        <setting name="logImpl" value="STDOUT_LOGGING" />
    </settings>
        <!-- 设置类的别名 -->
      <!--  <typeAliases>
            &lt;!&ndash; <typeAlias alias="User" type="com.wu.pojo.User"/> &ndash;&gt;
            &lt;!&ndash; 根据包取别名，把包下面的所有类都按类名来取别名 &ndash;&gt;
            &lt;!&ndash; 这用可以简化代码量 &ndash;&gt;
            <package name="com.chun.proxy.entity"/>
        </typeAliases>-->


    <plugins>
        <plugin interceptor="com.chun.proxy.util.SqlLogInterceptor"></plugin>
    </plugins>

        <environments default="development">
            <environment id="development">
                <!-- 配置事务管理 ，采用JDBC管理事务-->
                <transactionManager type="JDBC"/>
                <!-- POOLED是mybatis的 数据源 -->
                <!-- JNDI是基于tomcat的数据源 -->
                <dataSource type="POOLED">
                    <property name="driver" value="${jdbc.driver}"/>
                    <property name="url" value="${jdbc.url}"/>
                    <property name="username" value="${jdbc.username}"/>
                    <property name="password" value="${jdbc.password}"/>
                </dataSource>
            </environment>
        </environments>



        <!-- pojo的映射文件UserMapper引入到配入到配置文件中 -->
        <mappers>
            <!-- resource要写成路径 -->
           <!-- <mapper resource="com/chun/proxy/mapper/SubjectUserTypeMapper.xml"/>-->
            <package name="com.chun.proxy.mapper"/>
        </mappers>



<!--

<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <settings>
        &lt;!&ndash; 设置日志输出为LOG4J &ndash;&gt;
        <setting name="logImpl" value="LOG4J" />
        &lt;!&ndash;将以下画线方式命名的数据库列映射到 Java 对象的驼峰式命名属性中&ndash;&gt;
        <setting name= "mapUnderscoreToCamelCase" value="true" />
    </settings>
    &lt;!&ndash;简化类命名空间 &ndash;&gt;
    <typeAliases>
        <package name="com.chun.proxy.entity" />
    </typeAliases>

    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC" />
            <dataSource type="UNPOOLED">
                <property name="driver" value="com.mysql.jdbc.Driver" />
                <property name="url"
                          value="jdbc:mysql://localhost:3306/test?useSSL=false" />
                <property name="username" value="root" />
                <property name="password" value="" />
            </dataSource>
        </environment>
    </environments>
    <mappers>
        &lt;!&ndash;常规做法&ndash;&gt;
        &lt;!&ndash;<mapper resource="tk/mybatis/simple/mapper/CountryMapper.xml" />&ndash;&gt;
        &lt;!&ndash;<mapper resource="tk/mybatis/simple/mapper/PrivilegeMapper.xml" />&ndash;&gt;
        &lt;!&ndash;<mapper resource="tk/mybatis/simple/mapper/RoleMapper.xml" />&ndash;&gt;
        &lt;!&ndash;<mapper resource="tk/mybatis/simple/mapper/RolePrivilegeMapper.xml" />&ndash;&gt;
        &lt;!&ndash;<mapper resource="tk/mybatis/simple/mapper/UserMapper.xml" />&ndash;&gt;
        &lt;!&ndash;<mapper resource="tk/mybatis/simple/mapper/UserRoleMapper.xml" />&ndash;&gt;
        &lt;!&ndash;第二种做法&ndash;&gt;
        <package name="com.chun.proxy.mapper"/>
    </mappers>
</configuration>-->
</configuration>
